# üè¢ Application MVC - Gestion RH

Une application web moderne de gestion des ressources humaines d√©velopp√©e avec une architecture MVC personnalis√©e en PHP.

## üìã Table des mati√®res

- [Fonctionnalit√©s](#-fonctionnalit√©s)
- [Pr√©requis](#-pr√©requis)
- [Installation](#-installation)
- [Configuration](#-configuration)
- [Utilisation](#-utilisation)
- [Architecture](#-architecture)
- [API](#-api)
- [Tests](#-tests)
- [D√©ploiement](#-d√©ploiement)
- [Contribution](#-contribution)
- [Support](#-support)

## ‚ú® Fonctionnalit√©s

### üë• Gestion des Employ√©s
- ‚úÖ CRUD complet (Cr√©er, Lire, Modifier, Supprimer)
- ‚úÖ Import/Export (Excel, PDF)
- ‚úÖ Recherche avanc√©e et filtres
- ‚úÖ Gestion des photos de profil
- ‚úÖ Historique des modifications

### ‚è∞ Syst√®me de Pointage
- ‚úÖ Pointage d'entr√©e/sortie
- ‚úÖ Gestion des pauses
- ‚úÖ Justification des retards
- ‚úÖ Calcul automatique des heures
- ‚úÖ Rapports de pr√©sence

### üë®‚Äçüíº Gestion des Administrateurs
- ‚úÖ R√¥les et permissions
- ‚úÖ Hi√©rarchie manag√©riale
- ‚úÖ Audit des actions

### üîî Syst√®me de Notifications
- ‚úÖ Notifications temps r√©el
- ‚úÖ Notifications par email
- ‚úÖ Historique des notifications
- ‚úÖ Param√©trage personnalis√©

### üí¨ Messagerie Interne
- ‚úÖ Messages priv√©s
- ‚úÖ Pi√®ces jointes
- ‚úÖ Conversations group√©es
- ‚úÖ Statuts de lecture

### üìÖ Calendrier Interactif
- ‚úÖ √âv√©nements d'entreprise
- ‚úÖ Cong√©s et absences
- ‚úÖ R√©unions et formations
- ‚úÖ Vue mensuelle/hebdomadaire

### üìä Rapports et Statistiques
- ‚úÖ Tableaux de bord
- ‚úÖ Graphiques interactifs
- ‚úÖ Export des donn√©es
- ‚úÖ Analyses personnalis√©es

## üîß Pr√©requis

### Serveur Web
- **PHP** >= 8.0
- **MySQL** >= 5.7 ou **MariaDB** >= 10.3
- **Apache** ou **Nginx**
- **Composer** (optionnel)

### Extensions PHP Requises
```bash
php-mysql
php-pdo
php-json
php-mbstring
php-curl
php-gd
php-zip
php-xml
```

### Outils de D√©veloppement (Optionnels)
- **Node.js** >= 14.0 (pour les assets)
- **Git** pour le versioning
- **PHPUnit** pour les tests

## üöÄ Installation

### 1. Cloner le Projet
```bash
git clone https://github.com/votre-repo/gestion-rh-mvc.git
cd gestion-rh-mvc
```

### 2. Configuration du Serveur Web

#### Apache (.htaccess)
```apache
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ public/index.php [QSA,L]
```

#### Nginx
```nginx
server {
    listen 80;
    server_name votre-domaine.com;
    root /path/to/gestion-rh-mvc/public;
    index index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
```

### 3. Configuration de la Base de Donn√©es

#### Cr√©er la Base de Donn√©es
```sql
CREATE DATABASE gestion_rh CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'rh_user'@'localhost' IDENTIFIED BY 'mot_de_passe_securise';
GRANT ALL PRIVILEGES ON gestion_rh.* TO 'rh_user'@'localhost';
FLUSH PRIVILEGES;
```

#### Ex√©cuter les Migrations
```bash
cd migrations
php 001_create_tables.php up
```

### 4. Configuration des Permissions
```bash
# Dossiers d'√©criture
chmod 755 logs/
chmod 755 uploads/
chmod 755 exports/

# Fichiers de configuration
chmod 644 config/config.php
```

## ‚öôÔ∏è Configuration

### 1. Configuration Principale
√âditez le fichier `config/config.php` :

```php
<?php
// Base de donn√©es
define('DB_HOST', 'localhost');
define('DB_NAME', 'gestion_rh');
define('DB_USER', 'rh_user');
define('DB_PASS', 'mot_de_passe_securise');

// Application
define('APP_NAME', 'Gestion RH - Votre Entreprise');
define('BASE_URL', 'https://votre-domaine.com/');
define('APP_ENV', 'production'); // development ou production

// S√©curit√©
define('SECRET_KEY', 'votre_cle_secrete_unique_et_complexe');

// Email
define('MAIL_HOST', 'smtp.votre-serveur.com');
define('MAIL_USERNAME', 'noreply@votre-domaine.com');
define('MAIL_PASSWORD', 'mot_de_passe_email');
?>
```

### 2. Configuration des R√¥les et Permissions

Les r√¥les par d√©faut sont :
- **Super Admin** : Acc√®s complet
- **Admin** : Gestion des employ√©s et rapports
- **Manager** : Gestion de son √©quipe
- **Employ√©** : Acc√®s limit√© √† son profil

### 3. Param√®tres Syst√®me

Acc√©dez √† `/parametres` pour configurer :
- Horaires de travail
- Notifications
- Formats de date/heure
- Politiques de mot de passe

## üìñ Utilisation

### 1. Premi√®re Connexion

**Compte Administrateur par D√©faut :**
- Email : `admin@gestion-rh.com`
- Mot de passe : `admin123456`

‚ö†Ô∏è **Important** : Changez ce mot de passe imm√©diatement !

### 2. Gestion des Employ√©s

#### Ajouter un Employ√©
1. Aller dans **Employ√©s** > **Ajouter**
2. Remplir le formulaire
3. Uploader une photo (optionnel)
4. Assigner un manager
5. D√©finir les permissions

#### Import en Masse
1. Pr√©parer un fichier Excel/CSV
2. Aller dans **Employ√©s** > **Importer**
3. S√©lectionner le fichier
4. Mapper les colonnes
5. Valider l'import

### 3. Syst√®me de Pointage

#### Configuration
```php
// Dans config/config.php
define('WORKING_HOURS_START', '08:00');
define('WORKING_HOURS_END', '17:00');
define('LUNCH_BREAK_DURATION', 60); // minutes
define('TOLERANCE_MINUTES', 15);
```

#### Utilisation
- Les employ√©s pointent via l'interface web
- G√©olocalisation optionnelle
- Justification automatique des retards
- Calcul des heures suppl√©mentaires

### 4. Notifications

#### Types de Notifications
- **Info** : Informations g√©n√©rales
- **Success** : Actions r√©ussies
- **Warning** : Avertissements
- **Error** : Erreurs syst√®me

#### Configuration Email
```php
// Utilisation de PHPMailer (recommand√©)
require_once 'vendor/phpmailer/phpmailer/src/PHPMailer.php';
require_once 'vendor/phpmailer/phpmailer/src/SMTP.php';
```

### 5. Messagerie

#### Fonctionnalit√©s
- Messages priv√©s entre utilisateurs
- Pi√®ces jointes (PDF, images, documents)
- Conversations group√©es
- Notifications de nouveaux messages

### 6. Calendrier

#### Types d'√âv√©nements
- **R√©unions** : Meetings d'√©quipe
- **Formations** : Sessions de formation
- **Cong√©s** : Vacances et absences
- **F√©ri√©s** : Jours f√©ri√©s
- **Maintenance** : Arr√™ts syst√®me

## üèóÔ∏è Architecture

### Structure MVC

```
gestion-rh-mvc/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ Controllers/          # Contr√¥leurs
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AuthController.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ EmployeController.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PointageController.php
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îú‚îÄ‚îÄ Models/              # Mod√®les
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ User.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Employe.php
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Pointage.php
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îú‚îÄ‚îÄ Views/               # Vues
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ employes/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îî‚îÄ‚îÄ Core/                # Classes de base
‚îÇ       ‚îú‚îÄ‚îÄ BaseController.php
‚îÇ       ‚îú‚îÄ‚îÄ BaseModel.php
‚îÇ       ‚îî‚îÄ‚îÄ Router.php
‚îú‚îÄ‚îÄ config/                  # Configuration
‚îÇ   ‚îî‚îÄ‚îÄ config.php
‚îú‚îÄ‚îÄ public/                  # Point d'entr√©e web
‚îÇ   ‚îú‚îÄ‚îÄ index.php
‚îÇ   ‚îî‚îÄ‚îÄ .htaccess
‚îú‚îÄ‚îÄ assets/                  # Ressources statiques
‚îÇ   ‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îî‚îÄ‚îÄ images/
‚îú‚îÄ‚îÄ routes/                  # D√©finition des routes
‚îÇ   ‚îî‚îÄ‚îÄ web.php
‚îú‚îÄ‚îÄ migrations/              # Scripts de migration
‚îÇ   ‚îî‚îÄ‚îÄ 001_create_tables.php
‚îú‚îÄ‚îÄ tests/                   # Tests unitaires
‚îú‚îÄ‚îÄ logs/                    # Fichiers de log
‚îú‚îÄ‚îÄ uploads/                 # Fichiers upload√©s
‚îî‚îÄ‚îÄ exports/                 # Exports g√©n√©r√©s
```

### Flux de Requ√™te

1. **Point d'entr√©e** : `public/index.php`
2. **Routage** : `routes/web.php`
3. **Contr√¥leur** : Traitement de la logique
4. **Mod√®le** : Acc√®s aux donn√©es
5. **Vue** : Rendu HTML
6. **R√©ponse** : Envoi au client

### S√©curit√©

#### Protection CSRF
```php
// G√©n√©ration du token
$token = generateCsrfToken();

// V√©rification
if (!verifyCsrfToken($_POST['_token'])) {
    throw new Exception('Token CSRF invalide');
}
```

#### Validation des Donn√©es
```php
$errors = $this->validate($data, [
    'email' => 'required|email',
    'password' => 'required|min:8',
    'nom' => 'required|min:2|max:50'
]);
```

#### Permissions
```php
// V√©rification des permissions
if (!$this->hasPermission('edit_employe')) {
    $this->handleUnauthorized();
}
```

## üîå API

### Endpoints Principaux

#### Authentification
```http
POST /api/auth/login
POST /api/auth/logout
POST /api/auth/refresh
```

#### Employ√©s
```http
GET    /api/employes           # Liste des employ√©s
GET    /api/employes/{id}      # D√©tails d'un employ√©
POST   /api/employes           # Cr√©er un employ√©
PUT    /api/employes/{id}      # Modifier un employ√©
DELETE /api/employes/{id}      # Supprimer un employ√©
```

#### Pointages
```http
GET  /api/pointages            # Liste des pointages
POST /api/pointages/pointer    # Effectuer un pointage
GET  /api/pointages/stats      # Statistiques
```

#### Notifications
```http
GET    /api/notifications      # Liste des notifications
POST   /api/notifications/{id}/read  # Marquer comme lue
DELETE /api/notifications/{id} # Supprimer
```

### Format des R√©ponses

#### Succ√®s
```json
{
    "success": true,
    "data": {
        "id": 1,
        "nom": "Dupont",
        "prenom": "Jean"
    },
    "message": "Op√©ration r√©ussie"
}
```

#### Erreur
```json
{
    "success": false,
    "error": {
        "code": 400,
        "message": "Donn√©es invalides",
        "details": {
            "email": ["Format d'email invalide"],
            "password": ["Minimum 8 caract√®res"]
        }
    }
}
```

## üß™ Tests

### Tests Unitaires

```bash
# Installation de PHPUnit
composer require --dev phpunit/phpunit

# Ex√©cution des tests
./vendor/bin/phpunit tests/
```

### Structure des Tests
```
tests/
‚îú‚îÄ‚îÄ Unit/
‚îÇ   ‚îú‚îÄ‚îÄ Models/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ UserTest.php
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ EmployeTest.php
‚îÇ   ‚îî‚îÄ‚îÄ Controllers/
‚îÇ       ‚îú‚îÄ‚îÄ AuthControllerTest.php
‚îÇ       ‚îî‚îÄ‚îÄ EmployeControllerTest.php
‚îú‚îÄ‚îÄ Feature/
‚îÇ   ‚îú‚îÄ‚îÄ AuthenticationTest.php
‚îÇ   ‚îî‚îÄ‚îÄ EmployeManagementTest.php
‚îî‚îÄ‚îÄ TestCase.php
```

### Exemple de Test
```php
<?php
class UserTest extends TestCase {
    public function testUserCreation() {
        $user = new User();
        $userData = [
            'nom' => 'Test',
            'prenom' => 'User',
            'email' => 'test@example.com',
            'password' => 'password123'
        ];

        $result = $user->createUser($userData);
        $this->assertNotNull($result);
        $this->assertEquals('test@example.com', $result['email']);
    }
}
```

## üöÄ D√©ploiement

### D√©ploiement en Production

#### 1. Pr√©paration
```bash
# Optimisation des assets
npm run build

# Nettoyage des fichiers de d√©veloppement
rm -rf tests/
rm -rf node_modules/
```

#### 2. Configuration Production
```php
// config/config.php
define('APP_ENV', 'production');
define('APP_DEBUG', false);

// D√©sactiver l'affichage des erreurs
error_reporting(0);
ini_set('display_errors', 0);
```

#### 3. S√©curisation
```bash
# Permissions restrictives
find . -type f -exec chmod 644 {} \;
find . -type d -exec chmod 755 {} \;
chmod 600 config/config.php

# Protection des dossiers sensibles
echo "Deny from all" > logs/.htaccess
echo "Deny from all" > config/.htaccess
```

#### 4. Optimisations
- Mise en cache des vues
- Compression GZIP
- CDN pour les assets
- Cache Redis/Memcached

### Docker (Optionnel)

```dockerfile
FROM php:8.0-apache

# Installation des extensions
RUN docker-php-ext-install pdo pdo_mysql mysqli

# Configuration Apache
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite

# Copie du code
COPY . /var/www/html/

# Permissions
RUN chown -R www-data:www-data /var/www/html/
```

## ü§ù Contribution

### Guide de Contribution

1. **Fork** le projet
2. Cr√©er une **branche** pour votre fonctionnalit√©
3. **Commiter** vos changements
4. **Pousser** vers la branche
5. Ouvrir une **Pull Request**

### Standards de Code

#### PHP
- PSR-4 pour l'autoloading
- PSR-12 pour le style de code
- Documentation PHPDoc
- Tests unitaires obligatoires

#### JavaScript
- ES6+ moderne
- Documentation JSDoc
- Linting avec ESLint

#### CSS
- M√©thodologie BEM
- Variables CSS personnalis√©es
- Responsive design

### Commit Messages
```
feat: ajouter syst√®me de notifications
fix: corriger bug de pointage
docs: mettre √† jour README
style: am√©liorer CSS du dashboard
refactor: optimiser requ√™tes base de donn√©es
test: ajouter tests pour AuthController
```

## üìû Support

### Documentation
- **Wiki** : [Lien vers le wiki]
- **API Docs** : [Lien vers la documentation API]
- **Tutoriels** : [Lien vers les tutoriels]

### Communaut√©
- **Issues GitHub** : Pour les bugs et demandes de fonctionnalit√©s
- **Discussions** : Pour les questions g√©n√©rales
- **Discord** : Chat en temps r√©el

### Support Commercial
- **Email** : support@gestion-rh.com
- **T√©l√©phone** : +33 1 23 45 67 89
- **Horaires** : Lundi-Vendredi 9h-18h

## üìÑ Licence

Ce projet est sous licence MIT. Voir le fichier [LICENSE](LICENSE) pour plus de d√©tails.

## üôè Remerciements

- **√âquipe de d√©veloppement**
- **Contributeurs open source**
- **Communaut√© PHP**
- **Testeurs et utilisateurs**

---

## üìä Statistiques du Projet

- **Lignes de code** : ~15,000
- **Fichiers** : ~80
- **Tests** : ~150
- **Couverture** : 85%

## üîÑ Changelog

### Version 1.0.0 (2024-01-15)
- ‚ú® Version initiale
- ‚úÖ Gestion compl√®te des employ√©s
- ‚úÖ Syst√®me de pointage
- ‚úÖ Notifications temps r√©el
- ‚úÖ Messagerie interne
- ‚úÖ Calendrier interactif

### Version 1.1.0 (Pr√©vue)
- üîÑ API REST compl√®te
- üì± Application mobile
- üîê Authentification SSO
- üìä Rapports avanc√©s
- üåê Multi-langues

---

**D√©velopp√© avec ‚ù§Ô∏è par l'√©quipe Gestion RH**

Pour toute question ou suggestion, n'h√©sitez pas √† nous contacter !
